/user/add:
  post:
    summary: "Add a New User to users_recharge"
    description: "Creates a new user in the 'users_recharge' table. Requires 'userName', 'passwordHash', and 'email'. Checks for duplicate username/email and database availability, and generates 'uniqueId', 'token', and 'resetCode'. Additionally, creates a corresponding entry in the 'store_recharge' table with default values for the user."
    tags: ["User"]
    parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
          properties:
            userName:
              type: "string"
              description: "Username of the user"
              example: "testuser"
            passwordHash:
              type: "string"
              description: "Hashed password of the user"
              example: "$2b$12$xyz123..."
            role:
              type: "string"
              description: "Role of the user"
              example: "user"
            groupId:
              type: "string"
              description: "Group ID the user belongs to"
              example: "groupB"
            email:
              type: "string"
              description: "Email address of the user"
              example: "testuser@example.com"
            status:
              type: "string"
              description: "Status of the user"
              example: "active"
          required:
            - userName
            - passwordHash
            - email
    responses:
      '201':
        description: "User created successfully"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
                  example: "User created successfully"
                uniqueId:
                  type: "string"
                  example: "user_002"
                token:
                  type: "string"
                  example: "abc123def456ghi789"
                resetCode:
                  type: "string"
                  example: "reset1234"
      '400':
        description: "Bad Request if required fields are missing"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "Missing required fields: 'userName', 'passwordHash', or 'email'"
      '409':
        description: "Conflict if the username or email already exists"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "Username or email already exists"
      '500':
        description: "Internal Server Error due to database or connection issues"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  example: "MySQL database not responding, please check the database service"
